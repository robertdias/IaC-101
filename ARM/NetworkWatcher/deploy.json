{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "networkWatcherName": {
            "type": "string",
            "defaultValue": "",
            "minLength": 1,
            "metadata": {
                "description": "Required. Name of the Network Watcher resource (hidden)"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "monitors": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. Array that contains the monitors"
            }
        },
        "workspaceResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specify the Workspace Resource ID"
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Tags of the resource."
            }
        },
        "cuaId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
            }
        }
    },
    "variables": {
        "outputs": [
            {
                "type": "Workspace",
                "workspaceSettings": {
                    "workspaceResourceId": "[parameters('workspaceResourceId')]"
                }
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "condition": "[not(empty(parameters('cuaId')))]",
            "name": "[concat('pid-', parameters('cuaId'))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkWatchers",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "name": "[parameters('networkWatcherName')]",
            "properties": {
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/networkWatchers/connectionMonitors",
            "apiVersion": "2020-05-01",
            "name": "[if(empty(parameters('monitors')), 'dummy/dummy', concat(parameters('networkWatcherName'),'/', parameters('monitors')[copyIndex()].connectionMonitorName))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "monitorLoop",
                "count": "[length(parameters('monitors'))]"
            },
            "condition": "[not(empty(parameters('monitors')))]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkWatchers/', parameters('networkWatcherName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                //"source": "[parameters('source')]",
                //"destination": "[parameters('destination')]",
                //"autoStart": "[parameters('enableAutoStart')]",
                //"monitoringIntervalInSeconds": "[parameters('monitoringIntervalInSeconds')]",
                "endpoints": "[if(empty(parameters('monitors')), json('null'), parameters('monitors')[copyIndex()].endpoints)]",
                "testConfigurations": "[if(empty(parameters('monitors')), json('null'), parameters('monitors')[copyIndex()].testConfigurations)]",
                "testGroups": "[if(empty(parameters('monitors')), json('null'), parameters('monitors')[copyIndex()].testGroups)]",
                "outputs": "[if(empty(parameters('workspaceResourceId')), json('null'), variables('outputs'))]"
            }
        }
    ],
    "functions": [
    ],
    "outputs": {
        "networkWatcherResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the Network Watcher was created in."
            }
        },
        "networkWatcherResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkWatchers', parameters('networkWatcherName'))]",
            "metadata": {
                "description": "The Resource id of the Network Watcher deployed."
            }
        },
        "networkWatcherName": {
            "type": "string",
            "value": "[parameters('networkWatcherName')]",
            "metadata": {
                "description": "The name of the Network Watcher deployed."
            }
        }
    }
}